/**************************************************************************
*                                                                         *
*   PROJECT     : MIPS port for UCOS-II                                   *
*                                                                         *
*   MODULE      : bank a&b link.xn                                        *
*                                                                         *
*   AUTHOR      : wuyueqian                                               *
*                                                                         *
*   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
*                                                                         *
*   Tool-chain  : Cygnus                                                  *
*                                                                         *
*                                                                         *
*   Linker script file                                                    *
*                                                                         *
**************************************************************************/

/*定义GROUP BANK INDEX 和其他地址变量*/
INPUT(link_base.xn)

/*1.AP INDEX*/
AP_INDEX = FRONT_AP;


/*只是建议起始地址，也可以往后偏移，如control_2一般不是从这个地址，如果要占全部的空间，则使用control_1*/
BANK_CONTROL_1_ADDR_BASE = (AP_BANK_FRONT_CONTROL_1 << 24) + SRAM_AP_BANK_FRONT_CONTROL_ADDR;

/*back ap 没有UI段*/
BANK_UI_1_ADDR_BASE = (AP_BANK_FRONT_UI_1 << 24) + SRAM_AP_BANK_FRONT_UI_ADDR;

/*固定复用basal或者codec的空间，不能跨空间使用，跟control1和control2不一样*/
BANK_FRONT_ENHANCED_1_ADDR_BASE = (AP_BANK_FRONT_ENHANCED_1 << 24) + SRAM_AP_BANK_FRONT_ENHANCED_1_ADDR;
BANK_FRONT_ENHANCED_2_ADDR_BASE = (AP_BANK_FRONT_ENHANCED_2 << 24) + SRAM_AP_BANK_FRONT_ENHANCED_2_ADDR;

BANK_BACK_ENHANCED_1_ADDR_BASE = (AP_BANK_BACK_ENHANCED_1 << 24) + SRAM_AP_BANK_BACK_ENHANCED_1_ADDR;
BANK_BACK_ENHANCED_2_ADDR_BASE = (AP_BANK_BACK_ENHANCED_2 << 24) + SRAM_AP_BANK_BACK_ENHANCED_2_ADDR;


/*bank的实际空间大小,不能修改*/
BANK_CONTROL_SIZE = SRAM_AP_BANK_FRONT_CONTROL_SIZE;
BANK_UI_SIZE = SRAM_AP_BANK_FRONT_UI_SIZE;
BANK_FRONT_ENHANCED1_SIZE = SRAM_AP_BANK_FRONT_ENHANCED_1_SIZE;
BANK_FRONT_ENHANCED2_SIZE = SRAM_AP_BANK_FRONT_ENHANCED_2_SIZE;
BANK_BACK_ENHANCED1_SIZE = SRAM_AP_BANK_BACK_ENHANCED_1_SIZE;
BANK_BACK_ENHANCED2_SIZE = SRAM_AP_BANK_BACK_ENHANCED_2_SIZE;

/*系统允许的bank的最大空间大小，不能修改*/
AP_BANK_SPACE = BANK_SPACE;

OUTPUT_ARCH(mips)
EXTERN(vfs_op_entry)

SECTIONS
{      
    
    /*链接enhanced 1代码*/
    . = BANK_BACK_ENHANCED_1_ADDR_BASE;
    OFFSET = . & 0x3ffff;
    BANK_ENHANCED_1_0    : 
    {
       eh_module.o(.text .rodata .xdata)  
    } 
         
    /*bank control 1 1*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_1_1   : 
    {
        eh_fsel_entry.o(.text .rodata .xdata) 
    }
            
    /*bank control 1 2*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_1_2   : 
    {
        eh_fsel_function.o(.text .rodata .xdata)
    }
    
      . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
    BANK_FRONT_ENHANCED_LRC_1_1    : 
    {
        eh_lyric_load.o(.text .rodata .xdata)      
    }  
    
    /*bank contro2 0*/
    . = BANK_BACK_ENHANCED_2_ADDR_BASE;
    OFFSET = . & 0x3ffff;                    
    BANK_ENHANCED_2_0   : 
    {
        eh_module_sub.o(.text .rodata .xdata)  
    }
    
    /*bank control 1*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_1   : 
    {
       eh_fsel_directory_next.o(.text .rodata .xdata) 
    }
    
    /*bank control 2*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_2   : 
    {
       eh_fsel_directory_prev.o(.text .rodata .xdata) 
    }
    
    /*bank control 3*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_3   : 
    {
        eh_fsel_directory_func.o(.text .rodata .xdata)   
    }
    
    /*bank control 4*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_4   : 
    {
        eh_fsel_favorite_sel.o(.text .rodata .xdata)   
    }
    
    /*bank control 5*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_5   : 
    {
         eh_fsel_favorite_func.o(.text .rodata .xdata)  
    }
    
    /*bank control 6*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_6   : 
    {
        eh_fsel_shuffle.o(.text .rodata .xdata) 
    }
    
    /*bank control 7*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_7   : 
    {
        eh_fsel_playlist_sel.o(.text .rodata .xdata) 
    }
    
    /*bank control 8*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_ENHANCED_2_8   : 
    {
        eh_fsel_playlist_func.o(.text .rodata .xdata) 
    }
       
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;        
    BANK_FRONT_ENHANCED_FSEL_2_9    : 
    {
        eh_fsel_shuffle2.o(.text .rodata .xdata)     
    }
        
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;         
    BANK_FRONT_ENHANCED_FSEL_2_10    : 
    {
        eh_fsel_function_sub.o(.text .rodata .xdata)     
    }  
    
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;   
    BANK_FRONT_ENHANCED_LRC_2_1    : 
    {
        eh_lyric_load_sub1.o(.text .rodata .xdata)      
    }
    
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;  
    BANK_FRONT_ENHANCED_LRC_2_2    : 
    {
        eh_lyric_load_sub2.o(.text .rodata .xdata)      
    }
    
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;     
    BANK_FRONT_ENHANCED_LRC_2_3    : 
    {
        eh_lyric_load_sub3.o(.text .rodata .xdata)      
    }        
                                                          
 }
