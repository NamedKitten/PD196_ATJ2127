/**************************************************************************
*                                                                         *
*   PROJECT     : MIPS port for UCOS-II                                   *
*                                                                         *
*   MODULE      : bank a&b link.xn                                        *
*                                                                         *
*   AUTHOR      : wuyueqian                                               *
*                                                                         *
*   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
*                                                                         *
*   Tool-chain  : Cygnus                                                  *
*                                                                         *
*                                                                         *
*   Linker script file                                                    *
*                                                                         *
**************************************************************************/
/*-----------------------  memory map ------------------------------------*
*   ap_code                  address                           length     *
*-------------------------------------------------------------------------*
*   rcode              0xbfc1ee00-0xbfc1f5ff                    0x800(2k) *
*-------------------------------------------------------------------------*
* front control     (0x40**0000+0x1fe00)-(0x40**0000+0x205ff)   0x800(2k) *
*-------------------------------------------------------------------------*
* front UI          (0x48**0000+0x1f600)-(0x48**0000+0x1fdff)   0x800(2k) *
*-------------------------------------------------------------------------*
* front enhance1    (0x78**0000+0x27000)-(0x78**0000+0x277ff)   0x800(2k) *
*-------------------------------------------------------------------------*
* front enhance2    (0x71**0000+0x27800)-(0x71**0000+0x27fff)   0x800(2k) *
*-------------------------------------------------------------------------*
*                                                                         *
*------------------------------------------------------------------------ *
*   ap_data                  address                           length     *
*-------------------------------------------------------------------------*
*   rdata              0x9fc1d200-0x9fc1d9ff                    0x800(2k) *
*-------------------------------------------------------------------------*
* applib(global data)  0x9fc19f80-0x9fc19fff                    0x80      *
*-------------------------------------------------------------------------*/
/*定义GROUP BANK INDEX 和其他地址变量*/
INPUT(link_base.xn)

/*1.AP INDEX*/
AP_INDEX = FRONT_AP;

/*2.从地址map图中获取card模块的常驻代码段物理地址，只需写低14位，开发人员需填写，集成开始后只由集成人员修改，驱动人员不允许修改*/
SRAM_TEXT_ADDR = SRAM_AP_FRONT_RCODE_ADDR;
SRAM_DATA_ADDR = SRAM_AP_FRONT_DATA_ADDR;


/*3.转换为链接地址,不能修改*/
RCODE_TEXT_ADDR = RCODE_ADDR_BASE + SRAM_TEXT_ADDR;
RDATA_DATA_ADDR = RDATA_ADDR_BASE + SRAM_DATA_ADDR;

/*只是建议起始地址，也可以往后偏移，如control_2一般不是从这个地址，如果要占全部的空间，则使用control_1*/
BANK_CONTROL_1_ADDR_BASE = (AP_BANK_FRONT_CONTROL_1 << 24) + SRAM_AP_BANK_FRONT_CONTROL_ADDR;
/*back ap 没有UI段*/
BANK_UI_1_ADDR_BASE = (AP_BANK_FRONT_UI_1 << 24) + SRAM_AP_BANK_FRONT_UI_ADDR;
/*固定复用basal或者codec的空间，不能跨空间使用，跟control1和control2不一样*/
BANK_ENHANCED_1_ADDR_BASE = (AP_BANK_FRONT_ENHANCED_1 << 24) + SRAM_AP_BANK_FRONT_ENHANCED_1_ADDR;
BANK_ENHANCED_2_ADDR_BASE = (AP_BANK_FRONT_ENHANCED_2 << 24) + SRAM_AP_BANK_FRONT_ENHANCED_1_ADDR;

/*bank的实际空间大小,不能修改*/
BANK_CONTROL_SIZE = SRAM_AP_BANK_FRONT_CONTROL_SIZE;
BANK_UI_SIZE = SRAM_AP_BANK_FRONT_UI_SIZE;
BANK_ENHANCED1_SIZE = SRAM_AP_BANK_FRONT_ENHANCED_1_SIZE;
BANK_ENHANCED2_SIZE = SRAM_AP_BANK_FRONT_ENHANCED_2_SIZE;

/*系统允许的bank的最大空间大小，不能修改*/
AP_BANK_SPACE = BANK_SPACE;

OUTPUT_ARCH(mips)

ENTRY(__start)
EXTERN(key_op_entry)
EXTERN(audio_device_op_entry)

SECTIONS
{   
    . = 0x9fc19f80;
	  APP_GLOBE_DATA :
    {
    	  /*common globe 数据*/
    	  applib_globe_data.o(.bss)
    	  . = 0x80;
    }
      
	/* 常驻代码段: .text */
    .text RCODE_TEXT_ADDR	: 
    {
        /*_resident_text = ABSOLUTE(.); */
        /*4.填写rcode输入节*/
        api.a(.text)
        browser_message.o(.text)       
        browser_scene_browsing.o(.text .rodata) 
    	browser_comfunc.o(.text .rodata)                  
        app_timer_rcode.o(.text)
        message_rcode.o(.text)
       /*_resident_text_end = ABSOLUTE(.);  */      
    }
        /* 初始化了的全局数据段，紧跟在 .text段后面: .data */
    .data RDATA_DATA_ADDR	: AT(ADDR(.text) + SIZEOF(.text)) 
    {
        /*_resident_data = ABSOLUTE(.);*/
        /*5.填写rdata输入节，所以文件产生的.data都被链接到这里*/
        browser_main.o(.data)
        eh_rdata.o(.data)
        eh_fsel_rdata.o(.data)
        eh_bs_rdata.o(.data)
        /*_resident_data_end = ABSOLUTE(.);*/
    }

	/* 未初始化的全局数据段，系统不会进行清零，由应用开发者自己把握: .bss, .sbss .common common */
    .bss	:
    {
        browser_main.o(.bss)
        applib_app_data.o(.bss)
    	common_ui_data.o(.bss)
    	common_func_data.o(.bss)
    	eh_rdata.o(.bss)
        eh_fsel_rdata.o(.bss)
        eh_bs_rdata.o(.bss)
    }

    /*6.链接bank control 1代码*/
    /*bank0 预留给运行时库ctor */
    . = BANK_CONTROL_1_ADDR_BASE;
    /*OFFSET为ui bank 1组的实际物理地址*/
    OFFSET = . & 0x3ffff;
    BANK_CONTROL_1_0	: 
    {
        ctor.o(.text .rodata)
    }=0x0/*对定位符的赋值而产生的空隙由0x0填充*/

    /*另一个bank control 1*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
    BANK_CONTROL_1_1	: 
    {    
        browser_main.o(.text .rodata)    
        . = BANK_CONTROL_SIZE;      
    }=0x0
  
     . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
    BANK_CONTROL_1_2	: 
    {
	    browser_scene_menu.o(.text .rodata .xdata)  
    	. = BANK_CONTROL_SIZE;
    }=0x0
       
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
    BANK_CONTROL_1_3	: 
    {
    	browser_menu_cfg.o(.text .rodata) 
    	. = BANK_CONTROL_SIZE;   
    }=0x0
    
}
