/**************************************************************************
*                                                                         *
*   PROJECT     : MIPS port for UCOS-II                                   *
*                                                                         *
*   MODULE      : bank a&b link.xn                                        *
*                                                                         *
*   AUTHOR      : wuyueqian                                               *
*                                                                         *
*   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
*                                                                         *
*   Tool-chain  : Cygnus                                                  *
*                                                                         *
*                                                                         *
*   Linker script file                                                    *
*                                                                         *
**************************************************************************/
/*-----------------------  memory map ------------------------------------*
*   ap_code                  address                           length     *
*-------------------------------------------------------------------------*
*   rcode              0xbfc1e800-0xbfc1edff                   0x600(1.5k)*
*-------------------------------------------------------------------------*
* back control     (0x60**0000+0x1e000)-(0x60**0000+0x1e7ff)   0x800(2k)  *
*-------------------------------------------------------------------------*
* back enhance1    (0x7a**0000+0x28800)-(0x7a**0000+0x28fff)   0x800(2k)  *
*-------------------------------------------------------------------------*
* back enhance2    (0x7b**0000+0x2a000)-(0x7b**0000+0x2a7ff)   0x800(2k) *
*-------------------------------------------------------------------------*
*                                                                         *
*------------------------------------------------------------------------ *
*   ap_data                  address                           length     *
*-------------------------------------------------------------------------*
*   rdata              0x9fc1da00-0x9fc1dfff                   0x600(1.5k)*
*-------------------------------------------------------------------------*
* applib(global data)  0x9fc19f80-0x9fc19fff                    0x80      *
*-------------------------------------------------------------------------*/
/*定义GROUP BANK INDEX 和其他地址变量*/
INPUT(link_base.xn)

/*1.AP INDEX*/
AP_INDEX = BACK_AP;

/*2.从地址map图中获取card模块的常驻代码段物理地址，只需写低14位，开发人员需填写，集成开始后只由集成人员修改，驱动人员不允许修改*/
SRAM_TEXT_ADDR = SRAM_AP_BACK_RCODE_ADDR;
SRAM_DATA_ADDR = SRAM_AP_BACK_DATA_ADDR;


/*3.转换为链接地址,不能修改*/
RCODE_TEXT_ADDR = RCODE_ADDR_BASE + SRAM_TEXT_ADDR;
RDATA_DATA_ADDR = RDATA_ADDR_BASE + SRAM_DATA_ADDR;

/*只是建议起始地址，也可以往后偏移，如control_2一般不是从这个地址，如果要占全部的空间，则使用control_1*/
BANK_CONTROL_1_ADDR_BASE = (AP_BANK_BACK_CONTROL_1 << 24) + SRAM_AP_BANK_BACK_CONTROL_ADDR;

/*back ap 没有UI段*/

/*固定复用basal或者codec的空间，不能跨空间使用，跟control1和control2不一样*/
BANK_ENHANCED_1_ADDR_BASE = (AP_BANK_BACK_ENHANCED_1 << 24) + SRAM_AP_BANK_BACK_ENHANCED_1_ADDR;
BANK_ENHANCED_2_ADDR_BASE = (AP_BANK_BACK_ENHANCED_2 << 24) + SRAM_AP_BANK_BACK_ENHANCED_2_ADDR;

/*bank的实际空间大小,不能修改*/
BANK_CONTROL_SIZE = SRAM_AP_BANK_BACK_CONTROL_SIZE;
//BANK_UI_SIZE = SRAM_AP_BANK_FRONT_UI_SIZE;
BANK_ENHANCED1_SIZE = SRAM_AP_BANK_BACK_ENHANCED_1_SIZE;
BANK_ENHANCED2_SIZE = SRAM_AP_BANK_BACK_ENHANCED_2_SIZE;

/*系统允许的bank的最大空间大小，不能修改*/
AP_BANK_SPACE = BANK_SPACE;

OUTPUT_ARCH(mips)

ENTRY(__start)
EXTERN(base_op_entry)
SECTIONS
{
    /* case 全局数据，各AP共享 */
    . = 0x9fc19f80;
	APP_GLOBE_DATA :
    {
    	/*common globe 数据*/
    	applib_globe_data.o(.bss)
    	. = 0x80;
    }
    
    /*常驻代码*/
    .text RCODE_TEXT_ADDR  : 
    {
        /*_resident_text = ABSOLUTE(.); *//*只是标号*/
        /*4.填写rcode输入节*/
        api.a(.text)
        mengine_control.o(.text)
        app_timer_rcode.o(.text)
        message_rcode_for_engine.o(.text)    
        /*_resident_text_end = ABSOLUTE(.);*/        
    }
    /* 初始化了的全局数据段*/
    .data RDATA_DATA_ADDR   :  AT(ADDR(.text) + SIZEOF(.text)) 
    {
        /*_resident_data = ABSOLUTE(.);*/
        /*5.填写rdata输入节，所以文件产生的.data都被链接到这里*/
        mengine_main.o(.data)
        applib_app_data.o(.data)
    	common_func_data.o(.data)
    	eh_rdata.o(.data)
        eh_fsel_rdata.o(.data)  
	 eh_lrc_rdata.o(.data) 
        /*_resident_data_end = ABSOLUTE(.);*/
    }
    /*未初始化的全局数据段，系统不会进行清零*/
    .bss :
    {
        mengine_main.o(.bss)
        applib_app_data.o(.bss)
    	common_func_data.o(.bss)
    	eh_rdata.o(.bss)
        eh_fsel_rdata.o(.bss)
        eh_lrc_rdata.o(.bss)  
        *(.sbss)
        *(.common)
        *(common)
    }    

    /*6.链接bank control 0代码*/
    . = BANK_CONTROL_1_ADDR_BASE;
    OFFSET = . & 0x3ffff;
    BANK_CONTROL_1_0    : 
    {
        ctor.o(.text .rodata)        
    }

    /*bank control 1*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_1   : 
    {
        mengine_main.o(.text .rodata) 
        . = BANK_CONTROL_SIZE; 
    }
    
    /*bank control 2*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_2   : 
    {
        mengine_message_done.o(.text .rodata) 
        . = BANK_CONTROL_SIZE; 
    }
    
    /*bank control 3*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_3   : 
    {
       mengine_event.o(.text .rodata) 
       . = BANK_CONTROL_SIZE; 
    }
    
    /*bank control 4*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_4   : 
    {
       mengine_event_param.o(.text .rodata) 
       . = BANK_CONTROL_SIZE; 
    }
    
    /*bank control 5*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_5   : 
    {
       mengine_play_deal.o(.text .rodata .xdata) 
       . = BANK_CONTROL_SIZE; 
    }
    
    /*bank control 6*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_6   : 
    {
       mengine_audible_deal.o(.text .rodata .xdata)
       . = BANK_CONTROL_SIZE;  
    }
    
    /*bank control 7*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_7   : 
    {
       mengine_event_audible.o(.text .rodata .xdata)
       . = BANK_CONTROL_SIZE;  
    }
    
        /*bank control 8*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_8   : 
    {
       mengine_event_volume.o(.text .rodata .xdata) 
       . = BANK_CONTROL_SIZE; 
    }
        /*bank control 9*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_9   : 
    {
       mengine_audible_sys.o(.text .rodata .xdata)
       . = BANK_CONTROL_SIZE;  
    }    
    
    /****确认没使用ENHANCED模块接口时可使用其BANK 空间，慎用！！！**********/
    
    . = BANK_ENHANCED_1_ADDR_BASE + AP_BANK_SPACE * 32;
  /*OFFSET 为FRONT_BANK 1组的实际物理地址*/
    OFFSET = . & 0x3ffff;      
    BANK_FORNT_ENHANCED_1_32	: 
    {
        codec_WM8904.o(.text .rodata .xdata)
        . = BANK_ENHANCED1_SIZE;
    }=0x0      
	. = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;  
			
	
	/*占用 ENHANCED 2组的1个bank*/    
	. = BANK_ENHANCED_2_ADDR_BASE + AP_BANK_SPACE * 32;
  /*OFFSET 为FRONT_BANK 2组的实际物理地址*/
    OFFSET = . & 0x3ffff;
    BANK_FORNT_ENHANCED_2_32	: 
    {
        rom_I2C.o(.text .rodata .xdata) 
        . = BANK_ENHANCED2_SIZE;
    }=0x0 
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;  
               
 }
